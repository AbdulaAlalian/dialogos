apply plugin: 'groovy' // for tests; necessary dependencies are included from com.clt.script

dependencies {
  implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
  testImplementation group: 'org.json', name: 'json', version: '20200518'
    
  implementation group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '2.6.1'
  implementation group: 'org.jdom', name: 'jdom2', version: '2.0.6'

  implementation project(':com.clt.base')
  implementation project(':com.clt.script')
  implementation project(':com.clt.xml')
  implementation project(':com.clt.audio')
  implementation project(':com.clt.speech')
  implementation project(':com.clt.mac')
  implementation project(':ClientInterface')
  implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.21'
  
  testImplementation project(':plugins:DialogOS_SphinxPlugin')
  testImplementation project(':plugins:DialogOS_MaryTTSPlugin')
  runtimeOnly fileTree(dir: "${projectDir}/../plugins", include: '*/build/libs/*.jar') // */
}

buildscript {
    repositories {
        maven { url = uri("https://plugins.gradle.org/m2/") }
    }
 
    dependencies {
        // Add dependency for build script,
        // so we can access Git from our
        // build script.
        classpath 'org.ajoberstar.grgit:grgit-gradle:4.1.1'
    }
}
 

ext {
    // Open the Git repository in the current directory.
    git = org.ajoberstar.grgit.Grgit.open(dir: file('..'))
 
    // Get commit id of HEAD.
    longGitRevision = git.head().id
    shortGitRevision = git.head().abbreviatedId
}

task('saveGitRevision') {
    def prop = new Properties()
    prop.put("longGitRevision", longGitRevision)
    prop.put("shortGitRevision", shortGitRevision)
    prop.put("buildTimestamp", new Date().format("yyyy-MM-dd HH:mm"))
    
    def propFile = rootProject.file("Diamant/src/main/resources/VERSION");
    propFile.createNewFile();
    prop.store(propFile.newWriter(), null);
}

build.dependsOn(saveGitRevision)




