package com.clt.srgf;

import java.util.Map;

/**
 * A terminal node in the parse tree generated by {@link Grammar#parse}.
 *
 * @author Daniel Bobbert
 * @version 1.0
 */
public class TerminalParseNode extends ParseNode {

    private Word word;

    TerminalParseNode(Word word) {

        this.word = word;
    }

    /**
     * Return the word that was matched. If you used
     * {@link Grammar#getParseTrees(Word[], String, ParseOptions)} to generate
     * the parse tree, this will be one of the {@link Word} objects from the
     * array you passed in.
     */
    public Word getWord() {

        return this.word;
    }

    @Override
    public boolean getAllowsChildren() {

        return false;
    }

    @Override
    public int hashCode() {

        return this.word.hashCode();
    }

    @Override
    public boolean equals(Object o) {

        if (o instanceof TerminalParseNode) {
            return this.word.equals(((TerminalParseNode) o).word);
        } else {
            return false;
        }
    }

    @Override
    ParseNode clone(Map<ParseNode, ParseNode> mapping) {

        ParseNode n = new TerminalParseNode(this.word);
        mapping.put(this, n);
        return n;
    }

    @Override
    public String toString() {

        return this.word.getWord();
    }
}
