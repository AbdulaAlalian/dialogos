/*
 * @(#)TerminalParseNode.java
 * Created on Thu Sep 16 2004
 *
 * Copyright (c) 2004 CLT Sprachtechnologie GmbH.
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of CLT Sprachtechnologie GmbH ("Confidential Information").  You
 * shall not disclose such Confidential Information and shall use
 * it only in accordance with the terms of the license agreement
 * you entered into with CLT Sprachtechnologie GmbH.
 */

package com.clt.srgf;

import java.util.Map;

/**
 * A terminal node in the parse tree generated by {@link Grammar#parse}.
 * 
 * @author Daniel Bobbert
 * @version 1.0
 */

public class TerminalParseNode
    extends ParseNode {

  private Word word;


  TerminalParseNode(Word word) {

    this.word = word;
  }


  /**
   * Return the word that was matched. If you used
   * {@link Grammar#getParseTrees(Word[], String, ParseOptions)} to generate the
   * parse tree, this will be one of the {@link Word} objects from the array you
   * passed in.
   */
  public Word getWord() {

    return this.word;
  }


  @Override
  public boolean getAllowsChildren() {

    return false;
  }


  @Override
  public int hashCode() {

    return this.word.hashCode();
  }


  @Override
  public boolean equals(Object o) {

    if (o instanceof TerminalParseNode) {
      return this.word.equals(((TerminalParseNode)o).word);
    }
    else {
      return false;
    }
  }


  @Override
  ParseNode clone(Map<ParseNode, ParseNode> mapping) {

    ParseNode n = new TerminalParseNode(this.word);
    mapping.put(this, n);
    return n;
  }


  @Override
  public String toString() {

    return this.word.getWord();
  }
}
