/*
 * @(#)GenerationOptions.java
 * Created on 24.10.04
 *
 * Copyright (c) 2004 CLT Sprachtechnologie GmbH.
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of CLT Sprachtechnologie GmbH ("Confidential Information").  You
 * shall not disclose such Confidential Information and shall use
 * it only in accordance with the terms of the license agreement
 * you entered into with CLT Sprachtechnologie GmbH.
 */

package com.clt.srgf;

import java.util.Collection;
import java.util.Map;

/**
 * GenerationOptions can be used to customize the set of strings that are
 * generated by {@link Grammar#generate}.
 * 
 * @author Daniel Bobbert
 * @version 1.0
 */

public final class GenerationOptions
    implements Cloneable {

  public String classFilter = null;
  public boolean groupDictionaries = false;
  public Map<String, Map<String, String>> dynamicVocabulary = null;
  public int maxRepeats = 1;
  public boolean dynamicVocabularyReplacesOriginalContent = true;


  @Override
  public Object clone() {

    try {
      GenerationOptions options = (GenerationOptions)super.clone();
      return options;
    } catch (Exception exn) {
      return null;
    }
  }


  public Collection<String> getDynamicVocabulary(String wordClass) {

    if (this.dynamicVocabulary == null) {
      return null;
    }
    else {
      Map<String, String> entry = this.dynamicVocabulary.get(wordClass);
      if (entry == null) {
        return null;
      }
      else {
        return entry.keySet();
      }
    }
  }


  public String getDynamicVocabularySubstitution(String wordClass, String word) {

    if (this.dynamicVocabulary == null) {
      return word;
    }
    else {
      Map<String, String> entry = this.dynamicVocabulary.get(wordClass);
      if (entry == null) {
        return word;
      }
      else {
        return entry.get(word);
      }
    }
  }
}
